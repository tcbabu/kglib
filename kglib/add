 void ui_drawimage(DIG *G,void *imgfile,float x1,float y1,float x2,float y2)
  {
  float fac;
  GMIMG *img,*rzimg;
  char *pt;
  int IMG =1,iw,ih,w,h,temp,wo,ho;
  int X1,Y1,X2,Y2,EVGAY,X0,Y0;
  int xl,yl,xu,yu;
  float lper,rper,tper,bper;

  DIALOG *D;
  kgDC *dc;
  kgWC *wc;
  if(imgfile== NULL) return;
  dc = G->dc;
  wc = G->wc;
  D = G->D;
  EVGAY = D->evgay;
  X1=uiscr_x(x1);
  X2=uiscr_x(x2);
  if(X1>X2) {temp=X2; X2=X1;X1=temp;}
  if(X1 > wc->c_v_x2) return;
  if(X2 < wc->c_v_x1) return;
  Y1=uiscr_y(y1);
  Y2=uiscr_y(y2);
  if(Y1>Y2) {temp=Y2; Y2=Y1;Y1=temp;}
  if(Y1 > wc->c_v_y2) return;
  if(Y2 < wc->c_v_y1) return;
  xl=X1,yl=Y1,xu=X2,yu=Y2;
  if(xl < wc->c_v_x1) xl=wc->c_v_x1;
  if(xu < wc->c_v_x1) xu=wc->c_v_x1;
  if(xl > wc->c_v_x2) xl=wc->c_v_x2;
  if(xu > wc->c_v_x2) xu=wc->c_v_x2;
  if(yl < wc->c_v_y1) yl=wc->c_v_y1;
  if(yu < wc->c_v_y1) yu=wc->c_v_y1;
  if(yl > wc->c_v_y2) yl=wc->c_v_y2;
  if(yu > wc->c_v_y2) yu=wc->c_v_y2;
  w = xu -xl+1;
  h = yu -yl+1;
  if((w<=0)||(h<=0)) return;
  lper = (xl-X1)/(float)(X2-X1);
  rper = (X2-xu)/(float)(X2-X1);
  tper = (yl-Y1)/(float)(Y2-Y1);
  bper = (Y2-yu)/(float)(Y2-Y1);

  pt = (char *)imgfile;
  if((pt[0]=='#')&&(pt[1]=='#')) {
    IMG=0; 
    img = uiGetImage((void *)(pt+2));
  }
  else img = imgfile;
  if(img== NULL) return;
  iw = img->image_width;
  ih = img->image_height;
  rzimg= (GMIMG *)kgChangeSizeImage(img,(X2-X1),(Y2-Y1));
  if(IMG==0) {kgFreeImage(img); IMG=1;}
  img= rzimg;
  iw = img->image_width;
  ih = img->image_height;
  if ( (lper!=0) ||(rper!=0) ||(tper!=0) ||(bper!=0)) {
    int l,r,b,t;
    l= iw*lper+1;r=iw*(1-rper);
    b= ih*bper+1;t=ih*(1-tper);
    rzimg = kgCropImage(img,l,b,r,t);
    uiFreeImage(img);
    IMG=0;
    img=rzimg;
  }

//  rzimg= (GMIMG *)uiThumbnailgmImage(img,w,h);
  X0= X1+w*0.5;
  Y0= EVGAY-Y2+h*0.5;
  wo = w;
  ho =  h;
  if(X2>wc->c_v_x2) X2 = wc->c_v_x2;
  if(X1<wc->c_v_x1) X1 = wc->c_v_x1;
  if(Y2>wc->c_v_y2) Y2 = wc->c_v_y2;
  if(Y1<wc->c_v_y1) Y1 = wc->c_v_y1;
  temp =EVGAY-Y1;
  Y1 = EVGAY -Y2;
  Y2 = temp;
  w = X2-X1+1;
  h = Y2 -Y1+1;
  rzimg->xoffset= +(X1+w/2 -X0)*2;
  rzimg->yoffset= +(Y1+h/2 -Y0)*2;
//  printf("Getting rzimg %d %d %d %d\n",rzimg->image_width,rzimg->image_height,rzimg->xoffset,rzimg->yoffset);
//  uiWriteImage(rzimg,"Junk.png");
  kgImage(D,rzimg,X1,Y1,w,h,0.0,1.0);
  uiFreeImage(rzimg);
  if(!IMG) uiFreeImage(img);
  
  }
